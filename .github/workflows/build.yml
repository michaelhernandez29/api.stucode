name: Build

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          SEQUELIZE_DATABASE: stucode
          SEQUELIZE_USERNAME: stucode
          SEQUELIZE_PASSWORD: stucode
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run Tests
        run: npm test

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          token: ${{ secrets.SONAR_TOKEN }}

      - name: Notify Slack
        if: ${{ always() }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ ${{ steps.sonar.outcome }} == 'failure' ]; then
            curl -X POST -H 'Content-type: application/json' --data '{"text":"❌ El escaneo de SonarCloud ha fallado."}' $SLACK_WEBHOOK_URL
          else
            curl -X POST -H 'Content-type: application/json' --data '{"text":"✅ El escaneo de SonarCloud ha finalizado con éxito."}' $SLACK_WEBHOOK_URL
          fi
